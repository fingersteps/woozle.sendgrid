<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Woozle.Persistence</name>
    </assembly>
    <members>
        <member name="M:Woozle.Persistence.IRepository`1.CreateQueryable(Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Creates a Queryable object to perform individual queries.
            </summary>
            <param name="sessionData"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.Count(Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Counts all records of the currents repositoreis WoozleObject type.
            </summary>
            <param name="sessionData"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.Synchronize(`0,Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Synchronizes the given object to the current context including all dependencies.
            </summary>
            <param name="item"></param>
            <param name="sessionData"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.Save(`0,Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Saves the given item to the current context.
            </summary>
            <param name="item"></param>
            <param name="sessionData"></param>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.Contains(`0,Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Checks whether the given item is already existing or not.
            </summary>
            <param name="item"></param>
            <param name="sessionData"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.Delete(`0,Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Deletes the given item in the current context.
            </summary>
            <param name="item"></param>
            <param name="sessionData"></param>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.FindAll(Woozle.Model.SessionHandling.SessionData,System.String[])">
            <summary>
            Gets all records of the repositories types and returns them in a list.
            </summary>
            <param name="sessionData"></param>
            <param name="lazyIncludeString"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.FindByExp(System.Func{`0,System.Boolean},Woozle.Model.SessionHandling.SessionData,System.String[])">
            <summary>
            Performs a query with the given expression and including arguments.
            </summary>
            <param name="predicate"></param>
            <param name="sessionData"></param>
            <param name="lazyIncludeString"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.FindById(System.Int32)">
            <summary>
            Gets a record by its id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IRepository`1.FindById(System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a record by its id and the needed references.
            </summary>
            <param name="id"></param>
            <param name="neededReferenceProperties"></param>
            <param name="neededCollectionProperties"></param>
            <returns></returns>
        </member>
        <member name="P:Woozle.Persistence.IRepository`1.UnitOfWork">
            <summary>
            Gets the current used unit of work instance for this repository.
            </summary>
        </member>
        <member name="M:Woozle.Persistence.IModuleRepository.FindModulePermissions(Woozle.Model.Role,Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Finds all permissions related to modules/functions for the current mandant (acc. the given session)
            </summary>
            <param name="role"> </param>
            <param name="sessionData"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IModuleRepository.FindModulesForMandator(Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Finds modules for a given mandator.
            </summary>
            <param name="sessionData"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IStatusFieldRepository.GetStatusInformation(System.String,Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Gets status information (status records) for a given field.
            </summary>
            <param name="statusFieldName"></param>
            <param name="sessionData"></param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IUnitOfWork.Commit">
            <summary>
            Commit all changes
            </summary>
        </member>
        <member name="M:Woozle.Persistence.IUnitOfWork.Rollback">
            <summary>
            Rollbacks all made changes
            </summary>
        </member>
        <member name="T:Woozle.Persistence.IUserRepository">
            <summary>
            Interface for a user repository.
            </summary>
        </member>
        <member name="M:Woozle.Persistence.IUserRepository.FindByUserCriteria(Woozle.Model.UserSearch.UserSearchCriteria,Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Finds a user by a <see cref="T:Woozle.Model.UserSearch.UserSearchCriteria"/>
            </summary>
            <param name="criteria"><see cref="T:Woozle.Model.UserSearch.UserSearchCriteria"/></param>
            <param name="sessionData"><see cref="T:Woozle.Model.SessionHandling.Session"/></param>
            <returns>A list of <see cref="T:Woozle.Model.UserSearch.UserSearchResult"/></returns>
        </member>
        <member name="M:Woozle.Persistence.IUserRepository.FindForLogin(System.String)">
            <summary>
            Gets the user object and its assigned mandator(s)
            </summary>
            <param name="username">The username</param>
            <returns></returns>
        </member>
        <member name="M:Woozle.Persistence.IUserRepository.LoadUser(System.Int32,Woozle.Model.SessionHandling.SessionData)">
            <summary>
            Loads a user by the given id.
            </summary>
            <param name="id"></param>
            <param name="sessionData"></param>
            <returns></returns>
        </member>
    </members>
</doc>
